name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  YC_TOKEN: ${{ secrets.YC_TOKEN }}
  YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
  YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
  YC_ZONE: ${{ secrets.YC_ZONE }}
  KITTYGRAM_USER: ${{ secrets.KITTYGRAM_USER }}
  KITTYGRAM_SSH: ${{ secrets.KITTYGRAM_SSH }}

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Terraform Plan
    if: ${{ github.event.inputs.action == 'plan' }}

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Install terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
        wget -O- https://apt.releases.hashicorp.com/gpg | \
        gpg --dearmor | \
        sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null

        gpg --no-default-keyring \
        --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
        --fingerprint

        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
        https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list

        sudo apt update
        sudo apt-get install terraform -y

    - name: Run terraform plan
      working-directory: ./infra
      run: terraform plan

  # apply:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Terraform Apply
  #   working-directory: ./infra
  #   if: ${{ github.event.inputs.action == 'apply' }}
  #   run: terraform apply

  # destroy:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Terraform Destroy
  #   working-directory: ./infra
  #   if: ${{ github.event.inputs.action == 'destroy' }}
  #   run: terraform destroy