name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  YC_TOKEN: ${{ secrets.YC_TOKEN }}
  YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
  YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
  YC_ZONE: ${{ secrets.YC_ZONE }}
  KITTYGRAM_USER: ${{ secrets.KITTYGRAM_USER }}
  KITTYGRAM_SSH: ${{ secrets.KITTYGRAM_SSH }}
  TF_WORKSPACE: "terraform-github-actions"
  CONFIG_DIRECTORY: "./infra"

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Terraform Plan
    if: ${{ github.event.inputs.action == 'plan' }}

    steps:
    - name: Check out code
      uses: actions/checkout@v3
  
    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      id: plan-upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.CONFIG_DIRECTORY }}
        speculative: true

    - name: Create Plan Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      id: plan-run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
        plan_only: true

    - name: Get Plan Output
      uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
      id: plan-output
      with:
        plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}


  # apply:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Terraform Apply
  #   working-directory: ./infra
  #   if: ${{ github.event.inputs.action == 'apply' }}
  #   run: terraform apply

  # destroy:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Terraform Destroy
  #   working-directory: ./infra
  #   if: ${{ github.event.inputs.action == 'destroy' }}
  #   run: terraform destroy