name: Main Workflow
on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0

    - name: Test with flake8
      run: python -m flake8 backend/
    
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: jene4kabezdar
          password: ${{ secrets.DOCKERHUBPASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: jene4kabezdar/kittygram_backend:latest
      
      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: jene4kabezdar/kittygram_frontend:latest

      - name: Push nginx to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: jene4kabezdar/kittygram_nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.KITTYGRAM_HOST }}
          username: ${{ secrets.KITTYGRAM_USER }}
          key: ${{ secrets.KITTYGRAM_SSH }}
          source: "docker-compose.production.yml"
          target: "kittygram"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.KITTYGRAM_HOST }}
          username: ${{ secrets.KITTYGRAM_USER }}
          key: ${{ secrets.KITTYGRAM_SSH }}
          script: |
            cd kittygram

            sudo docker compose -f docker-compose.production.yml pull

            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d

            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /code/collected_static/. /backend_static/static/

  tg-notify:
    name: Telegram notify
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Успешный деплой
